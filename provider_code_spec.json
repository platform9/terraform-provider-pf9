{
	"datasources": [
		{
			"name": "cluster",
			"schema": {
				"attributes": [
					{
						"name": "id",
						"string": {
							"computed_optional_required": "required",
							"description": "UUID of the cluster"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed",
							"description": "Name of the cluster"
						}
					},
					{
						"name": "project_id",
						"string": {
							"computed_optional_required": "computed",
							"description": "UUID of the project the cluster belongs to"
						}
					},
					{
						"name": "kubeconfig",
						"string": {
							"computed_optional_required": "computed",
							"description": "Kubeconfig blob"
						}
					},
					{
						"name": "status",
						"string": {
							"computed_optional_required": "computed",
							"description": "Status"
						}
					},
					{
						"name": "task_status",
						"string": {
							"computed_optional_required": "computed",
							"description": "Status of task execution"
						}
					},
					{
						"name": "task_error",
						"string": {
							"computed_optional_required": "computed",
							"description": "Error during execution of task"
						}
					},
					{
						"name": "master_status",
						"string": {
							"computed_optional_required": "computed",
							"description": "Master status"
						}
					},
					{
						"name": "worker_status",
						"string": {
							"computed_optional_required": "computed",
							"description": "Worker status"
						}
					}
				]
			}
		},
		{
			"name": "node",
			"schema": {
				"attributes": [
					{
						"name": "id",
						"string": {
							"computed_optional_required": "required",
							"description": "UUID of the cluster"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed",
							"description": "Host name of the node"
						}
					},
					{
						"name": "api_responding",
						"bool": {
							"computed_optional_required": "computed",
							"description": "true indicates the API server on this node is running."
						}
					},
					{
						"name": "cluster_name",
						"string": {
							"computed_optional_required": "computed",
							"description": "Name of the cluster the node belongs to"
						}
					},
					{
						"name": "cluster_uuid",
						"string": {
							"computed_optional_required": "computed",
							"description": "UUID of the cluster the node belongs to"
						}
					},
					{
						"name": "is_master",
						"bool": {
							"computed_optional_required": "computed",
							"description": "true if this node is a master of a cluster."
						}
					},
					{
						"name": "node_pool_name",
						"string": {
							"computed_optional_required": "computed",
							"description": "Name of the node pool, the node belongs to"
						}
					},
					{
						"name": "node_pool_uuid",
						"string": {
							"computed_optional_required": "computed",
							"description": "UUID of the node pool, the node belongs to"
						}
					},
					{
						"name": "primary_ip",
						"string": {
							"computed_optional_required": "computed",
							"description": "IP address of the node"
						}
					},
					{
						"name": "status",
						"string": {
							"computed_optional_required": "computed",
							"description": "Status of the node. States include “ok”, ”converging”, “failed”. These states indicate the current state of kubernetes setup on the host."
						}
					}
				]
			}
		},
		{
			"name": "nodes",
			"schema": {
				"attributes": [
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed",
							"description": "Placeholder for ID"
						}
					},
					{
						"name": "nodes",
						"list_nested": {
							"computed_optional_required": "computed",
							"description": "List of nodes",
							"nested_object": {
								"attributes": [
									{
										"name": "id",
										"string": {
											"computed_optional_required": "computed",
											"description": "UUID of the cluster"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "required",
											"description": "Host name of the node"
										}
									},
									{
										"name": "api_responding",
										"bool": {
											"computed_optional_required": "computed",
											"description": "Indicates the API server on this node is running"
										}
									},
									{
										"name": "cluster_name",
										"string": {
											"computed_optional_required": "computed",
											"description": "Name of the cluster the node belongs to"
										}
									},
									{
										"name": "cluster_uuid",
										"string": {
											"computed_optional_required": "computed",
											"description": "UUID of the cluster the node belongs to"
										}
									},
									{
										"name": "is_master",
										"bool": {
											"computed_optional_required": "computed",
											"description": "true if this node is a master of a cluster."
										}
									},
									{
										"name": "node_pool_name",
										"string": {
											"computed_optional_required": "computed",
											"description": "Name of the node pool, the node belongs to"
										}
									},
									{
										"name": "node_pool_uuid",
										"string": {
											"computed_optional_required": "computed",
											"description": "UUID of the node pool, the node belongs to"
										}
									},
									{
										"name": "primary_ip",
										"string": {
											"computed_optional_required": "computed",
											"description": "IP address of the node"
										}
									},
									{
										"name": "status",
										"string": {
											"computed_optional_required": "computed",
											"description": "Status of the node. States include “ok”, ”converging”, “failed”. These states indicate the current state of kubernetes setup on the host."
										}
									}
								]
							}
						}
					},
					{
						"name": "filter",
						"single_nested": {
							"computed_optional_required": "required",
							"attributes": [
								{
									"name": "name",
									"string": {
										"computed_optional_required": "optional",
										"description": "Name of the attribute on which this filter is applied"
									}
								},
								{
									"name": "values",
									"list": {
										"computed_optional_required": "optional",
										"element_type": {
											"string": {}
										}
									}
								}
							]
						}
					}
				]
			}
		}
	],
	"provider": {
		"name": "pf9",
		"schema": {
			"attributes": [
				{
					"name": "du_fqdn",
					"string": {
						"optional_required": "optional",
						"description": "DU FQDN"
					}
				},
				{
					"name": "du_username",
					"string": {
						"optional_required": "optional",
						"description": "Username"
					}
				},
				{
					"name": "du_region",
					"string": {
						"optional_required": "optional",
						"description": "Region"
					}
				},
				{
					"name": "du_tenant",
					"string": {
						"optional_required": "optional",
						"description": "Tenant"
					}
				}
			]
		}
	},
	"resources": [
		{
			"name": "cluster",
			"schema": {
				"attributes": [
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed",
							"description": "UUID of the cluster"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required",
							"description": "Name of the cluster, applicable also for manual deploy"
						}
					},
					{
						"name": "master_nodes",
						"set": {
							"computed_optional_required": "optional",
							"element_type": {
								"string": {}
							},
							"description": "List of uuid of master nodes"
						}
					},
					{
						"name": "worker_nodes",
						"set": {
							"computed_optional_required": "optional",
							"element_type": {
								"string": {}
							},
							"description": "List of uuid of worker nodes"
						}
					},
					{
						"name": "allow_workloads_on_master",
						"bool": {
							"default": {
								"static": false
							},
							"computed_optional_required": "computed_optional",
							"description": "If the master nodes can run non-critical workloads"
						}
					},
					{
						"name": "master_vip_iface",
						"string": {
							"computed_optional_required": "optional",
							"description": "If masterVipIpv4 is specified, this field is required. Specify the interface that the VIP attaches to"
						}
					},
					{
						"name": "master_ip",
						"string": {
							"computed_optional_required": "optional",
							"description": "IP of master node"
						}
					},
					{
						"name": "master_vip_ipv4",
						"string": {
							"computed_optional_required": "optional",
							"description": "API server Virtual IP that provides failover. When specified, deploy keepalived setup to cluster master nodes together"
						}
					},
					{
						"name": "containers_cidr",
						"string": {
							"default": {
								"static": "10.20.0.0/16"
							},
							"computed_optional_required": "computed_optional",
							"description": "CIDR used for pod IP addresses, applicable also for manual deploy"
						}
					},
					{
						"name": "services_cidr",
						"string": {
							"default": {
								"static": "10.21.0.0/16"
							},
							"computed_optional_required": "computed_optional",
							"description": "CIDR used for service IP addresses, applicable also for manual deploy"
						}
					},
					{
						"name": "mtu_size",
						"int64": {
							"default": {
								"static": 1440
							},
							"computed_optional_required": "computed_optional",
							"description": "MTU for container network interfaces. Optional and used for the Calico network backend"
						}
					},
					{
						"name": "privileged",
						"bool": {
							"default": {
								"static": true
							},
							"computed_optional_required": "computed_optional",
							"description": "True if cluster runs privileged containers"
						}
					},
					{
						"name": "deploy_luigi_operator",
						"bool": {
							"default": {
								"static": false
							},
							"computed_optional_required": "computed_optional",
							"description": "If set to true, deploy Luigi operator on the cluster"
						}
					},
					{
						"name": "use_hostname",
						"bool": {
							"default": {
								"static": false
							},
							"computed_optional_required": "computed_optional",
							"description": "If set to true nodes will be registered in the cluster using hostname instead of IP address. This option is only applicable to IPv4 hosts. This option is ignored when deploying clusters on IPv6 enabled hosts and public clouds - AWS, Azure, etc."
						}
					},
					{
						"name": "interface_detection_method",
						"string": {
							"default": {
								"static": "FirstFound"
							},
							"computed_optional_required": "computed_optional",
							"description": "Method to detect the interface"
						}
					},
					{
						"name": "interface_name",
						"string": {
							"default": {
								"static": ""
							},
							"computed_optional_required": "computed_optional",
							"description": "Name of the interface"
						}
					},
					{
						"name": "node_pool_uuid",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "UUID of the node pool used for the cluster, applicable also for manual deploy"
						}
					},
					{
						"name": "kube_role_version",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "kube role version to be used when bringing up the cluster."
						}
					},
					{
						"name": "cpu_manager_policy",
						"string": {
							"default": {
								"static": "none"
							},
							"computed_optional_required": "computed_optional",
							"description": "options: none, static; default: none"
						}
					},
					{
						"name": "topology_manager_policy",
						"string": {
							"default": {
								"static": "none"
							},
							"computed_optional_required": "computed_optional",
							"description": "options: none, best-effort, restricted, single-numa-node; default: none"
						}
					},
					{
						"name": "calico_ip_ip_mode",
						"string": {
							"default": {
								"static": "Always"
							},
							"computed_optional_required": "computed_optional",
							"description": "IP-IP encapsulation mode for Calico network. Choose: Always, Never, CrossSubnet"
						}
					},
					{
						"name": "calico_nat_outgoing",
						"bool": {
							"default": {
								"static": true
							},
							"computed_optional_required": "computed_optional",
							"description": "Field is set to true if Calico nodes need to NAT north-south egress traffic."
						}
					},
					{
						"name": "calico_v4_block_size",
						"string": {
							"default": {
								"static": "26"
							},
							"computed_optional_required": "computed_optional",
							"description": "Subnet size per node for the Calico network, in CIDR notation (e.g. 26)"
						}
					},
					{
						"name": "calico_ipv4_detection_method",
						"string": {
							"computed_optional_required": "optional",
							"description": "Method to detect the IPv4 address"
						}
					},
					{
						"name": "network_plugin",
						"string": {
							"default": {
								"static": "calico"
							},
							"computed_optional_required": "computed_optional",
							"description": "Network backend to use for container networking. Defaults to flannel. Supported choices are flannel, calico",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\"calico\",\"flannel\")"
									}
								}
							]
						}
					},
					{
						"name": "runtime_config",
						"string": {
							"computed_optional_required": "optional",
							"description": "Applicable also for manual deploy"
						}
					},
					{
						"name": "container_runtime",
						"string": {
							"default": {
								"static": "containerd"
							},
							"computed_optional_required": "computed_optional",
							"description": "Container runtime used by this cluster",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\"containerd\")"
									}
								}
							]
						}
					},
					{
						"name": "etcd_backup",
						"single_nested": {
							"computed_optional_required": "optional",
							"attributes": [
								{
									"name": "storage_type",
									"string": {
										"default": {
											"static": "local"
										},
										"computed_optional_required": "computed_optional",
										"description": "Type of storage to be used for etcd backup. Supported choices are local, s3, gcs"
									}
								},
								{
									"name": "is_etcd_backup_enabled",
									"bool": {
										"default": {
											"static": true
										},
										"computed_optional_required": "computed_optional",
										"description": "Set to true if etcd backup should be enabled, false otherwise"
									}
								},
								{
									"name": "daily_backup_time",
									"string": {
										"default": {
											"static": "02:00"
										},
										"computed_optional_required": "computed_optional",
										"description": "etcd backup Timestamp for daily backup, specified in format 'HH:MM' "
									}
								},
								{
									"name": "max_timestamp_backup_count",
									"int64": {
										"default": {
											"static": 3
										},
										"computed_optional_required": "computed_optional",
										"description": "max number of Backups retention for Timestamp type backups, required if dailyBackupTime is provided"
									}
								},
								{
									"name": "storage_local_path",
									"string": {
										"default": {
											"static": "/etc/pf9/etcd-backup"
										},
										"computed_optional_required": "computed_optional",
										"description": "Path on the local filesystem where the etcd backup should be stored. For 'local' storage type only."
									}
								}
							]
						}
					},
					{
						"name": "monitoring",
						"single_nested": {
							"computed_optional_required": "optional",
							"attributes": [
								{
									"name": "retention_time",
									"string": {
										"default": {
											"static": "7d"
										},
										"computed_optional_required": "computed_optional",
										"description": "Retention time for monitoring data"
									}
								}
							]
						}
					},
					{
						"name": "tags",
						"map": {
							"computed_optional_required": "optional",
							"element_type": {
								"string": {}
							},
							"description": "User defined key-value pairs represented as a JSON object"
						}
					}
				]
			}
		}
	],
	"version": "0.1"
}